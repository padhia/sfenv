package build

import mill.*
import mill.scalalib.*
import mill.scalalib.publish.*

object V:
  val scala       = "3.7.2"
  val circeParser = "0.14.14"
  val circeYaml   = "0.16.1"
  val decline     = "2.5.0"
  val munit       = "1.1.1"

object `package` extends ScalaModule with PublishModule:
  def scalaVersion   = V.scala
  def publishVersion = "0.2.0-rc.1"
  def scalacOptions  = Seq("-deprecation", "-feature", "-Wunused:all", "-release", "11")
  def artifactName   = "sfenv"
  def mainClass      = Some("sfenv.Main")

  def mvnDeps = Seq(
    mvn"com.monovore::decline-effect:${V.decline}",
    mvn"io.circe::circe-parser:${V.circeParser}",
    mvn"io.circe::circe-yaml:${V.circeYaml}",
  )

  def pomSettings = PomSettings(
    description = "Manage Snowflake environments declaratively",
    organization = "org.padhia",
    url = "https://github.com/padhia/sfenv",
    licenses = Seq(License.MIT),
    versionControl = VersionControl.github("padhia", "sfenv"),
    developers = Seq(Developer("padhia", "Paresh Adhia", "https://github.com/padhia"))
  )

  object test extends ScalaTests with TestModule.Munit:
    def mvnDeps = Seq(mvn"org.scalameta::munit:${V.munit}")
